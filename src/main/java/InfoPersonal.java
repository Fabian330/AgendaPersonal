
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Fabian
 */
public class InfoPersonal extends javax.swing.JFrame {

    /**
     * Creates new form InfoPersonal
     */
    public InfoPersonal() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jIngresar = new javax.swing.JButton();
        jModificar = new javax.swing.JButton();
        jConsultarInfo = new javax.swing.JButton();
        jEliminar = new javax.swing.JButton();
        jCerrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Información personal");

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("Información Personal");

        jIngresar.setText("Ingresar");
        jIngresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jIngresarActionPerformed(evt);
            }
        });

        jModificar.setText("Modificar");
        jModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jModificarActionPerformed(evt);
            }
        });

        jConsultarInfo.setText("Consultar información");
        jConsultarInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jConsultarInfoActionPerformed(evt);
            }
        });

        jEliminar.setText("Eliminar");
        jEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jEliminarActionPerformed(evt);
            }
        });

        jCerrar.setText("Cerrar");
        jCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCerrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(52, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(50, 50, 50))
            .addGroup(layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jIngresar, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jConsultarInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jIngresar)
                .addGap(18, 18, 18)
                .addComponent(jModificar)
                .addGap(18, 18, 18)
                .addComponent(jConsultarInfo)
                .addGap(18, 18, 18)
                .addComponent(jEliminar)
                .addGap(18, 18, 18)
                .addComponent(jCerrar)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jIngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jIngresarActionPerformed
        // TODO add your handling code here:
        VentanaDatosPersonales vdp = new VentanaDatosPersonales();
        vdp.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jIngresarActionPerformed

    private void jCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCerrarActionPerformed
        // TODO add your handling code here:
        Menu m = new Menu();
        m.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jCerrarActionPerformed

    private void jModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jModificarActionPerformed
        // TODO add your handling code here:
        Archivos a = new Archivos();
        ArrayList<String> al = new ArrayList<String>();
        a.archivo1 = new File("DatosPersonales.txt");
        if (a.archivo1.length() == 0){
             JOptionPane.showMessageDialog(null, "No hay datos agregados.");
        }
        FileWriter fichero = null;
        PrintWriter pw = null;
        String inf;
        int cont=1;
        if(a.archivo1.exists()){
           try{
        FileReader fr=new FileReader(a.archivo1);
        BufferedReader b = new BufferedReader(fr);
        while((inf=b.readLine())!=null){
                 String[] info = inf.split("#");
                 if (!info[0].equals(info[0]))
                 {
                         al.add(inf);
                 }
                 
        else
                 {
        VentanaDatosPersonales vdp = new VentanaDatosPersonales();
        vdp.setVisible(true);
        this.dispose();
        vdp.jTextField1.setText(info[0]);
        vdp.jTextField2.setText(info[1]);
        vdp.jTextField3.setText(info[2]);
        vdp.jTextField4.setText(info[3]);
        vdp.jTextField5.setText(info[4]);
        vdp.jTextField6.setText(info[5]);
        vdp.jTextField7.setText(info[6]);
        vdp.jTextField8.setText(info[7]);
        vdp.jTextArea1.setText(info[8]); 
        
         }
                 
        }}catch(IOException ex){ex.printStackTrace();}
           finally
           {
           }
        
    }
    }//GEN-LAST:event_jModificarActionPerformed

    private void jConsultarInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jConsultarInfoActionPerformed
        // TODO add your handling code here:
        Archivos a = new Archivos();
       ArrayList<String> al = new ArrayList<String>();
        a.archivo1 = new File("DatosPersonales.txt");
        if (a.archivo1.length() == 0){
             JOptionPane.showMessageDialog(null, "No hay datos agregados.");
        }
        FileWriter fichero = null;
        PrintWriter pw = null;
        String inf;
        int cont=1;
        if(a.archivo1.exists()){
           try{
        FileReader fr=new FileReader(a.archivo1);
        BufferedReader b = new BufferedReader(fr);
        while((inf=b.readLine())!=null){
                 String[] info = inf.split("#");
                 if (!info[0].equals(info[0]))
                 {
                         al.add(inf);
                 }
                 
        else
                 {
        
        VentanaDatosPersonales vdp = new VentanaDatosPersonales();
        vdp.setVisible(true);
        this.dispose();
        vdp.jTextField1.setText(info[0]);
        vdp.jTextField1.setEditable(false);
        vdp.jTextField2.setText(info[1]);
        vdp.jTextField2.setEditable(false);
        vdp.jTextField3.setText(info[2]);
        vdp.jTextField3.setEditable(false);
        vdp.jTextField4.setText(info[3]);
        vdp.jTextField4.setEditable(false);
        vdp.jTextField5.setText(info[4]);
        vdp.jTextField5.setEditable(false);
        vdp.jTextField6.setText(info[5]);
        vdp.jTextField6.setEditable(false);
        vdp.jTextField7.setText(info[6]);
        vdp.jTextField7.setEditable(false);
        vdp.jTextField8.setText(info[7]);
        vdp.jTextField8.setEditable(false);
        vdp.jTextArea1.setText(info[8]);
        vdp.jTextArea1.setEditable(false);
        vdp.jGuardarDatos.setVisible(false);
        }
                 
        }}catch(IOException ex){ex.printStackTrace();}
           finally
           {
           }
        
    }
        
        
    }//GEN-LAST:event_jConsultarInfoActionPerformed

    private void jEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jEliminarActionPerformed
        // TODO add your handling code here:
        Archivos a = new Archivos();
        int res;
        res = JOptionPane.showConfirmDialog(null, "Realmente desea eliminar sus datos?", "Eliminar", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        if (res==0) {
        ArrayList<String> al = new ArrayList<String>();
        a.archivo1 = new File("DatosPersonales.txt");
        FileWriter fichero = null;
        PrintWriter pw = null;
        String inf;
        int cont=1;
        if(a.archivo1.exists()){
        try{
        FileReader fr=new FileReader(a.archivo1);
        BufferedReader b = new BufferedReader(fr);
        while((inf=b.readLine())!=null){
                 String[] info = inf.split("#");
                 if (!info[0].equals(info[0]))
                 {
                         al.add(inf);
                 }   
        }
        fr.close();
              b.close();
              File newfile = new File("DatosPersonales.txt");
              newfile.delete();
              fichero = new FileWriter("DatosPersonales.txt");
              pw = new PrintWriter(fichero);
              for (int i = 0; i < al.size(); i++)
                pw.println(al.get(i).toString());
              pw.close();
              fichero.close();
        }catch(IOException ex){ex.printStackTrace();}
           finally
           {
           }
        }
        JOptionPane.showMessageDialog(null, "Datos eliminados.");
        }
    }//GEN-LAST:event_jEliminarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InfoPersonal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InfoPersonal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InfoPersonal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InfoPersonal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InfoPersonal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jCerrar;
    private javax.swing.JButton jConsultarInfo;
    private javax.swing.JButton jEliminar;
    private javax.swing.JButton jIngresar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton jModificar;
    // End of variables declaration//GEN-END:variables
}
